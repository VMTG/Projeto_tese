// ******************************************************************************
// * IMPORTS SECTION
// ******************************************************************************
import 'package:flutter/material.dart';
import 'package:flutter_phoenix/flutter_phoenix.dart'; // For resetting the app
import 'package:Sensor/theme/app_theme.dart';
import 'package:firebase_core/firebase_core.dart';

import 'views/start_page.dart';

// ******************************************************************************
// * MAIN APPLICATION ENTRY POINT
// ******************************************************************************
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(
    Phoenix(
      child: const SensorApp(),
    ),
  );
}

// ******************************************************************************
// * ROOT APPLICATION WIDGET
// * Sets up the MaterialApp and theme
// ******************************************************************************
class SensorApp extends StatelessWidget {
  const SensorApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Sensor Data',
      //theme: ThemeData(primarySwatch: Colors.blue),
      theme: AppTheme.lightTheme,
      darkTheme: AppTheme.darkTheme,
      themeMode: ThemeMode.system, // Acompanha o tema do sistema
      home: const StartPage(), // Use the home page as home
    );
  }
}

// ******************************************************************************
// * OPERATION MODE ENUM
// * Defines the operating modes available in the application
// ******************************************************************************
enum OperationMode {
  continuous,
  impact,
}

// ******************************************************************************
// * DATA MODEL
// * Simple class to store time-series sensor data
// ******************************************************************************
class SensorData {
  final DateTime time;
  final double value;

  SensorData(this.time, this.value);
}
